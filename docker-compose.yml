services:
  db:
    image: postgres:14-alpine
    restart: always
    env_file:
      - .env_db
    ports:
      - '5432:5432'
    expose:
      - '5432'
    volumes:
      - ./backend/database/init:/docker-entrypoint-initdb.d
      - nexa-tracker-database:/var/lib/postgresql/data
    networks:
      - default

  # nginx:
  #   image: nginx:1.22-alpine
  #   ports:
  #     - '80:80'
  #     - '443:443'
  #   volumes:
  #     - ./conf/nginx.conf:/etc/nginx/nginx.conf:ro

  api:
    image: node:18-alpine
    restart: always
    env_file:
      - .env_api
      - .env_db
    volumes:
      - ./backend/api:/app/api
      - ./backend/database:/app/database
    working_dir: /app/api
    command: npm run start
    ports:
      - ${API_SERVER_PORT}:${API_SERVER_PORT}
    networks:
      - default
    depends_on:
      - db

  tracker:
    image: node:18-alpine
    restart: always
    env_file:
      - .env_db
      - .env_tracker
    volumes:
      - ./backend/database:/app/database
      - ./backend/tracker:/app/tracker
    working_dir: /app/tracker
    command: npm run start
    networks:
      - default
    depends_on:
      - db

  frontend:
    image: node:18-alpine
    restart: always
    ports:
      - '3000:3000'
    volumes:
      - ./frontend:/app/frontend
      - nexa-tracker-node-modules:/app/frontend/node_modules
      - ./.env_frontend:/app/frontend/.env
    working_dir: /app/frontend
    command: npm run dev
    networks:
      - default
volumes:
  nexa-tracker-database:
  nexa-tracker-node-modules:
